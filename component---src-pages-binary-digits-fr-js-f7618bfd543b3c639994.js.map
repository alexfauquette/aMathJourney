{"version":3,"sources":["webpack:///./src/pages/binary-digits/fr.js"],"names":["Page","location","currentLanguage","title"],"mappings":"8FAAA,8EA4HeA,UApHF,WAIX,OACE,kBAAC,IAAD,CAAQC,SAAS,iBAAiBC,gBAAgB,YAChD,kBAAC,IAAD,CAAKC,MAAM,oDAEX,+EAEA,wEAEA,kYAOA,0CACA,iOAKA,0CACA,0MAKA,0CACA,kDACA,wJAIA,mEACA,0CACA,gOAKA,0CACA,wQAMA,0CACA,oJAIA,qEACA,sjBAUA,0CACA,+KAKA,mEACA,sXAOA,2CACA,4NAKA,0CACA,mJAIA,0VAOA,uEACA,2SAOA,uEACA,2DAEA,iDACA,qE","file":"component---src-pages-binary-digits-fr-js-f7618bfd543b3c639994.js","sourcesContent":["import React, { useState } from \"react\"\n\nimport Layout from \"src/components/layout\"\nimport { Link } from \"gatsby\"\nimport SEO from \"src/components/seo\"\n\nimport classes from \"./style.module.scss\"\n\nconst Page = () => {\n  // deal with page state\n\n  //render\n  return (\n    <Layout location=\"/binary-digits\" currentLanguage=\"Français\">\n      <SEO title=\"Les ordinateurs comptent ils sur leurs doigts ?\" />\n\n      <h1>Les ordinateurs comptent ils sur leurs doigts ?</h1>\n\n      <h2>Rappel de comment compter sur ses doigts</h2>\n\n      <p>\n        Si vous avez grandit en France, vous avez probablement appris à compter\n        avec Picbille. Vous savez donc que les billes se rangent dans des boites\n        de 10 billes qui elles même se rangent dans des valises de 10 boites.\n        Pour nos amis francophone qui n’ont pas connu Picbille, voici comment on\n        compte avec Picbille. Premièrement on apprend les chiffres de 0 à 9\n      </p>\n      <p>[animation]</p>\n      <p>\n        Puis Quand on met la 10eme bille, on ferme la boite pour en commencer\n        une nouvelle. On à donc 10 = 1 boite + 0 bille, 11 = 1 boite + 1 bille,\n        12 = 1 boite + 2 billes, … 35 = 3 boites et 5 billes\n      </p>\n      <p>[animation]</p>\n      <p>\n        Une fois que l’enfant maîtrise les dizaines, on ajoute les centaines en\n        mettant 10 boites dans une valise : 245 = 2 valises + 4 boites + 5\n        billes = 2*100 + 4*10 + 5 billes\n      </p>\n      <p>[animation]</p>\n      <h2>avec Yoda comptons</h2>\n      <p>\n        Maintenant imaginons que vous ayez appris à compter avec maître Yoda.\n        Comme il à 6 doigts, des boites de 6 remplir il va.\n      </p>\n      <p>On apprend donc les nombres de 0 à 5</p>\n      <p>[animation]</p>\n      <p>\n        A la sixième bille on met la boite de côté, Et quand on à 6 boites on\n        les met dans une valise. Une boite ne vaut plus 10, mais 6 billes, et\n        une valise ne contient plus 100 bille mais 36 billes.\n      </p>\n      <p>[animation]</p>\n      <p>\n        notez que je dis 36 billes avec 36 en bleu, car c’est l’écriture de pic\n        bille. Pour Yoda le chiffre 6 n’existe pas. 6 billes s’écrit 10 et 36\n        s’écrit 100. Pour un même nombre de bille, Picbille et Yoda ont deux\n        écritures différentes.\n      </p>\n      <p>[Animation]</p>\n      <p>\n        On dit que Yoda compte en base 6 car il groupe tout en paquet de 6. Et\n        Picbille en base 10 car il groupe tout par 10.\n      </p>\n      <h2>Combien de doigts sur un ordinateur ?</h2>\n      <p>\n        Maintenant, passons à l’ordinateur. Lui compte en base 2. Si vous avez\n        suivit, cela veut dire qu’il utilise des boites de 2. Il connaît donc\n        les chiffres 0, 1 et c’est tout, car 2 = 1 boite pleine. Puis comme\n        précédemment, quand il a 2 boites il les met dans une valise. Ce qui\n        nous permet de compter jusque 7. Pour aller plus loin, disons qu’il met\n        ses valises dans un carton, qu’il met dans un container, qu’il met dans\n        un bateau. On a donc les contenant suivant : • boite = 2 • valise = 4 •\n        carton = 8 • container = 16 • bateau = 32\n      </p>\n      <p>[animation]</p>\n      <p>\n        Vous l’aurez remarqué, l’ordinateur n’a besoin que de 2 chiffres\n        différents : 0 et 1. Le fameux « bit » pour Binary digit (chiffre à 2\n        valeurs).\n      </p>\n      <h2>Pour aller plus loin : les décimaux</h2>\n      <p>\n        Après avoir appris à compter sur vos doigts, vous avez sans probablement\n        appris à écrire les nombres à virgule : En sachant que le 1er chiffre\n        apres la virgule correspond à 1/10, le suivant à 1/100, etc. Ce qui est\n        logique, car d’un chiffre à l’autre on multiplie (on groupe) par 10. La\n        virgule sert juste à désigner où se trouvent les unités.\n      </p>\n      <p>[animations]</p>\n      <p>\n        On peut faire la même chose avec les autres bases. On place un virgule\n        pour savoir où sont les unités, et pour passer d’une chiffres à un autre\n        on multiplie/divise par la base (10, 6, ou 2)\n      </p>\n      <p>[animation]</p>\n      <p>\n        Si vous êtes observateur, vous avez pue remarquer que tous les nombres\n        ne peuvent pas s’écrire ans toutes les bases.\n      </p>\n      <p>\n        Un exemple connu des humains est le nombre 1/3 qui s’écrit 0,33333…\n        Alors que pour Yoda rien de plus simple, 1/3 = 0,2 Pour les ordinateur\n        aussi ce type de problème existe. 1/10=0,1 pour les humains, mais pour\n        une ordinateur 1/10=0,0001100110011011… Notez la répétition du motif\n        « 0011 ». Elle se répète à l’infini.\n      </p>\n      <p>[animation du calcul de 1/10 en binaire]</p>\n      <p>\n        Conclusion, quand on manipule des nombre à virgule avec un ordinateur,\n        il faut faire attention, car les nombres à virgules ne tombent pas\n        forcément juste. La gestion des arrondis à été standardisé (ref) pour\n        que tous les ordinateurs donnent la même réponse à un calcul\n      </p>\n\n      <h2>Ca fait pas beaucoup de zero inutiles ?</h2>\n      <p>Ca c'est pour une autre fois</p>\n\n      <h2>Et les négatifs ?</h2>\n      <p>Ca aussi, c'est pour une autre fois</p>\n    </Layout>\n  )\n}\n\nexport default Page\n"],"sourceRoot":""}