{"version":3,"sources":["webpack:///./src/components/MAB/demo.js","webpack:///./src/pages/multy-arm-bandits/fr.js","webpack:///./src/components/MAB/style.module.scss"],"names":["DisplayCat","status","useState","initialized","setInitialized","useEffect","className","classes","cat","init","notInit","role","aria-label","DisplaySeenCat","color","seenCats","style","backgroundColor","ResultsSynthesis","nbOK","nbKO","stats","colSpan","Math","round","Number","EPSILON","getStatistic","results","wantedStatus","wantedIndex","filter","foodIndex","length","ResultsCats","colors","resultsContainer","map","id","key","statsContainer","CatList","N","catNumber","probaHappy","buttonsColor","Array","keys","cats","setCats","clearCatTimer","useRef","setResults","giveFood","useCallback","clearTimeout","current","head","rest","newStatus","random","setTimeout","catList","foodOptions","onClick","Page","location","currentLanguage","title","module","exports"],"mappings":"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","file":"component---src-pages-multy-arm-bandits-fr-js-f8d76f29e21bf9a67f33.js","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\"\n\nimport classes from \"./style.module.scss\"\n\nconst DisplayCat = ({ status }) => {\n  const [initialized, setInitialized] = useState(false)\n\n  useEffect(() => {\n    if (status) {\n      setInitialized(true)\n    }\n  }, [status])\n\n  switch (status) {\n    case \"OK\":\n      return (\n        <div\n          className={`${classes.cat} ${\n            initialized ? classes.init : classes.notInit\n          }`}\n        >\n          <span role=\"img\" aria-label=\"cat in love\">\n            😻\n          </span>\n        </div>\n      )\n    case \"KO\":\n      return (\n        <div\n          className={`${classes.cat} ${\n            initialized ? classes.init : classes.notInit\n          }`}\n        >\n          <span role=\"img\" aria-label=\"cat disgusted\">\n            🙀\n          </span>\n        </div>\n      )\n    default:\n      return (\n        <div\n          className={`${classes.cat} ${\n            initialized ? classes.init : classes.notInit\n          }`}\n        >\n          <span role=\"img\" aria-label=\"cat waiting for food\">\n            😺\n          </span>\n        </div>\n      )\n  }\n}\n\nconst DisplaySeenCat = ({ status, color }) => {\n  switch (status) {\n    case \"OK\":\n      return (\n        <div\n          className={classes.seenCats}\n          style={{ backgroundColor: color }} //, order: 2 * foodIndex + 1\n        >\n          <span role=\"img\" aria-label=\"cat in love\">\n            😻\n          </span>\n        </div>\n      )\n    case \"KO\":\n      return (\n        <div\n          className={classes.seenCats}\n          style={{ backgroundColor: color }} //, order: 2 * foodIndex + 2\n        >\n          <span role=\"img\" aria-label=\"cat disgusted\">\n            🙀\n          </span>\n        </div>\n      )\n  }\n}\n\nconst ResultsSynthesis = ({ nbOK, nbKO, color }) => (\n  <table style={{ backgroundColor: color }} className={classes.stats}>\n    <tbody>\n      <tr>\n        <td>\n          <span role=\"img\" aria-label=\"cat in love\">\n            😻\n          </span>\n        </td>\n        <td>\n          <span role=\"img\" aria-label=\"cat disgusted\">\n            🙀\n          </span>\n        </td>\n      </tr>\n      <tr>\n        <td>{nbOK}</td>\n        <td>{nbKO}</td>\n      </tr>\n      <tr>\n        {nbOK + nbKO === 0 ? (\n          <td colSpan={2}>No stats</td>\n        ) : (\n          <>\n            <td>\n              {Math.round((nbOK / (nbOK + nbKO) + Number.EPSILON) * 100) ||\n                Math.round((nbOK / (nbOK + nbKO) + Number.EPSILON) * 10000) /\n                  100}\n              %\n            </td>\n            <td>\n              {Math.round((nbKO / (nbOK + nbKO) + Number.EPSILON) * 100) ||\n                Math.round((nbKO / (nbOK + nbKO) + Number.EPSILON) * 10000) /\n                  100}\n              %\n            </td>\n          </>\n        )}\n      </tr>\n    </tbody>\n  </table>\n)\n\nconst getStatistic = (results, wantedStatus, wantedIndex) =>\n  results.filter(\n    ({ status, foodIndex }) =>\n      status === wantedStatus && foodIndex === wantedIndex\n  ).length\n\nconst ResultsCats = ({ results, colors }) => (\n  <div>\n    <div className={classes.resultsContainer}>\n      {results.map(({ id, status, foodIndex }) => (\n        <DisplaySeenCat key={id} status={status} color={colors[foodIndex]} />\n      ))}\n    </div>\n    <div className={classes.statsContainer}>\n      <ResultsSynthesis\n        nbOK={getStatistic(results, \"OK\", 0)}\n        nbKO={getStatistic(results, \"KO\", 0)}\n        color={colors[0]}\n      />\n      <ResultsSynthesis\n        nbOK={getStatistic(results, \"OK\", 1)}\n        nbKO={getStatistic(results, \"KO\", 1)}\n        color={colors[1]}\n      />\n    </div>\n  </div>\n)\n\nconst initialiseCats = N => {\n  return [...Array(N).keys()].map(id => ({\n    id: id,\n    status: \"\",\n  }))\n}\n\nexport const CatList = ({ catNumber, probaHappy, buttonsColor }) => {\n  const [cats, setCats] = useState(initialiseCats(catNumber))\n  const clearCatTimer = useRef(false)\n\n  const [results, setResults] = useState([])\n\n  const giveFood = useCallback(\n    (foodIndex, cats) => {\n      clearTimeout(clearCatTimer.current)\n\n      const [head, ...rest] = cats.filter(\n        cat => cat.status !== \"KO\" && cat.status !== \"OK\"\n      )\n      if (head) {\n        const newStatus = Math.random() <= probaHappy[foodIndex] ? \"OK\" : \"KO\"\n\n        setCats([\n          {\n            id: head.id,\n            status: newStatus,\n          },\n          ...rest,\n        ])\n        setResults(results => [\n          ...results,\n          { id: head.id, status: newStatus, foodIndex: foodIndex },\n        ])\n\n        clearCatTimer.current = setTimeout(() => {\n          setCats(rest)\n        }, 1000)\n      }\n    },\n    [clearCatTimer, probaHappy, setCats, setResults]\n  )\n\n  return (\n    <div>\n      <div>\n        <p className={classes.catList}>\n          {cats.map(({ id, status }) => (\n            <DisplayCat key={id} status={status} />\n          ))}\n        </p>\n      </div>\n      <div className={classes.foodOptions}>\n        <button\n          onClick={() => giveFood(0, cats)}\n          style={{ backgroundColor: buttonsColor[0] }}\n        >\n          🐟\n        </button>\n        <button\n          onClick={() => giveFood(1, cats)}\n          style={{ backgroundColor: buttonsColor[1] }}\n        >\n          🍖\n        </button>\n      </div>\n\n      <ResultsCats results={results} colors={buttonsColor} />\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport Layout from \"src/components/layout\"\n// import { Link } from \"gatsby\"\nimport SEO from \"src/components/seo\"\n\n// import classes from \"./style.module.scss\"\n\nimport { CatList } from \"src/components/MAB/demo\"\n\nconst Page = () => {\n  // deal with page state\n\n  //render\n  return (\n    <Layout location=\"/multy-arm-bandits\" currentLanguage=\"Français\">\n      <SEO title=\"Comment choisir son repas\" />\n      <h1>Comment choisir son repas</h1>\n      <CatList\n        catNumber={200}\n        probaHappy={[0.7, 0.4]}\n        buttonsColor={[\"blue\", \"red\"]}\n      />\n    </Layout>\n  )\n}\n\nexport default Page\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catList\":\"style-module--catList--Zyld7\",\"cat\":\"style-module--cat--dn_qY\",\"init\":\"style-module--init--1t4o3\",\"notInit\":\"style-module--notInit--3SBMK\",\"foodOptions\":\"style-module--foodOptions--2eTHV\",\"resultsContainer\":\"style-module--resultsContainer--3SkOS\",\"seenCats\":\"style-module--seenCats--1DnEs\",\"catAppear\":\"style-module--catAppear--2_prO\",\"statsContainer\":\"style-module--statsContainer--2UM0k\",\"stats\":\"style-module--stats--3xY57\"};"],"sourceRoot":""}