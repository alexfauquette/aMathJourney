{"version":3,"sources":["webpack:///./src/pages/dynamic-programming/images/recurrence_tableau.png","webpack:///./src/components/DynamicProgram/atoms/RecurrenceSolutions/index.js","webpack:///./src/components/DynamicProgram/atoms/Links/index.js","webpack:///./src/components/DynamicProgram/explanations/FullAlgo/index.js","webpack:///./src/components/DynamicProgram/atoms/RecurrenceExplanation/index.js","webpack:///./src/components/DynamicProgram/atoms/Solutions/index.js","webpack:///./src/components/DynamicProgram/explanations/InteractiveRecurrence/index.js","webpack:///./src/components/DynamicProgram/atoms/RecurrenceRelation/index.js","webpack:///./src/pages/dynamic-programming/images/formule_rec_ADN.png","webpack:///./src/pages/dynamic-programming/images/alignement.png","webpack:///./src/pages/dynamic-programming/images/arbre_coupe3.svg","webpack:///./src/pages/dynamic-programming/images/arbre_min.svg","webpack:///./src/pages/dynamic-programming/images/arbre_coupe1.svg","webpack:///./src/pages/dynamic-programming/images/trois_possibilites.png","webpack:///./src/pages/dynamic-programming/images/parcourt_tableau.png","webpack:///./node_modules/@material-ui/core/esm/Fade/Fade.js","webpack:///./node_modules/@material-ui/core/esm/Backdrop/Backdrop.js","webpack:///./node_modules/@material-ui/core/esm/Dialog/Dialog.js","webpack:///./node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack:///./node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","webpack:///./src/pages/dynamic-programming/fr.js","webpack:///./src/components/DynamicProgram/constants.js","webpack:///./src/pages/dynamic-programming/images/arbre_elague.png","webpack:///./src/pages/dynamic-programming/images/arbre_coupe2.svg","webpack:///./src/pages/dynamic-programming/images/calcul_score.png","webpack:///./src/components/DynamicProgram/atoms/Grid/index.js","webpack:///./src/components/DynamicProgram/explanations/InteractiveGrid/index.js","webpack:///./src/pages/dynamic-programming/images/simplification_ADN.png"],"names":["module","exports","RecurrenceSolutions","solutions","selectedSolution","setSelectedSolution","MAX_NUMBER_TO_DISPLAY","useState","startIndex","setStartIndex","slice","map","word1","word2","key","onEnter","isSelected","length","className","classes","buttonContainer","onClick","paths","includes","Links","links","showSolutions","Object","keys","reduce","accumulator","dx","dy","split","subWord1","subWord2","Dx","MEDIUM_CIRCLE_RADIUS","SQRT2","Dy","x1","COLUMN_SIZE","y1","x2","y2","link","transparent","matchLink","missmatchLink","emptyLink","FullAlgo","startWord1","startWord2","setWord1","setWord2","setSubWord1","setSubWord2","values","setValues","setLinks","showRecurrenceRelation","setShowRecurrenceRelation","setShowSolutions","setSolutions","useEffect","container","grid","inputContainer","onChange","event","target","value","toUpperCase","viewBox","style","width","maxHeight","Grid","RecurrenceRelation","subStep","explanation","RecurrenceExplanation","newValues","nextHorizontal","newSolutions","computeSolutions","state","sw1","sw2","char1","char2","newState","forEach","i","filter","e","join","used_dx","used_dy","fillLinksWithPaths","PRESENT","subSolutions","RECURRENCE_DATA","color","subSolution1","subSolution2","score","getCost","x","computationProblem","find","recurrenceShowBlock","solutionsContainer","alignLeft","leftBar","computationLine","hideLine","Words","wordsContainer","borderColor","Chars","charsContainer","match","mismatch","withEmpty","Score","Value","matchValue","mismatchValue","withEmptyValue","Solution","onMouseEnter","solutionContainer","_","index","InteractiveRecurrence","minValue","isComputable","recurrentValues","sort","a","b","SAVE","saveLink","COMPUTE","goodLink","badLink","notComputableLink","cx","cy","r","circle","saveCircle","goodCircle","resultCircle","badCircle","notComputableCircle","stroke","entering","opacity","entered","defaultTimeout","enter","enteringScreen","exit","leavingScreen","forwardRef","props","ref","children","inProp","onExit","_props$timeout","timeout","other","theme","useTheme","handleRef","useForkRef","createElement","Transition","appear","node","isAppearing","transitionProps","mode","webkitTransition","transitions","create","transition","childProps","cloneElement","visibility","undefined","_props$invisible","invisible","open","transitionDuration","root","withStyles","zIndex","position","display","alignItems","justifyContent","right","bottom","top","left","backgroundColor","WebkitTapHighlightColor","touchAction","name","defaultTransitionDuration","BackdropProps","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","maxWidth","onBackdropClick","onClose","onEntered","onEntering","onEscapeKeyDown","onExited","onExiting","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","_props$transitionDura","TransitionProps","ariaDescribedby","ariaLabelledby","mouseDownTarget","useRef","Modal","BackdropComponent","closeAfterTransition","role","concat","capitalize","currentTarget","current","onMouseDown","elevation","paper","String","paperFullScreen","paperFullWidth","scrollPaper","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","height","outline","margin","boxShadow","paperScrollPaper","flexDirection","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","xs","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","borderRadius","_props$dividers","dividers","flex","WebkitOverflowScrolling","padding","paddingTop","borderTop","palette","divider","borderBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$color","component","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","Component","typography","caption","button","overline","srOnly","overflow","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","_props$disableTypogra","disableTypography","Page","openFullTree","setOpenFullTree","location","currentLanguage","title","href","src","simplification_ADN","alignement","calcul_score","trois_possibilites","formule_rec_ADN","arbre_min","alt","class","arbre_coupe1","arbre_coupe2","arbre_coupe3","arbre_elague","InteractiveGrid","recurrence_tableau","parcourt_tableau","LARGE_CIRCLE_RADIUS","sqrt","char","tableLine","text-anchor","dominant-baseline","y","nomalWord","InteractiveCircle","accu","index1","index2","interactiveCircle","DisplayValues","v","activeCircle","text1","text2"],"mappings":"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","file":"component---src-pages-dynamic-programming-fr-js-57c76ace5cc4b1199d04.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/recurrence_tableau-dc61e4a750203e63306b6f1953e68e72.png\";","import React, { useState } from \"react\"\nimport { Solution } from \"src/components/DynamicProgram/atoms/Solutions\"\nimport classes from \"./styles.module.scss\"\n\nconst RecurrenceSolutions = ({\n  solutions,\n  selectedSolution,\n  setSelectedSolution,\n  MAX_NUMBER_TO_DISPLAY,\n}) => {\n  const [startIndex, setStartIndex] = useState(0)\n\n  return (\n    <div>\n      {solutions\n        .slice(\n          startIndex * MAX_NUMBER_TO_DISPLAY,\n          (startIndex + 1) * MAX_NUMBER_TO_DISPLAY\n        )\n        .map(({ word1, word2 }) => (\n          <Solution\n            key={`${word1}-${word2}`}\n            word1={word1}\n            word2={word2}\n            onEnter={() => setSelectedSolution(`${word1}-${word2}`)}\n            isSelected={`${word1}-${word2}` === selectedSolution}\n          />\n        ))}\n      {solutions.length > MAX_NUMBER_TO_DISPLAY && (\n        <div className={classes.buttonContainer}>\n          {startIndex > 0 ? (\n            <button\n              onClick={() => {\n                setStartIndex(startIndex => startIndex - 1)\n              }}\n            >\n              Prev\n            </button>\n          ) : (\n            <div />\n          )}\n          <p>\n            {startIndex * MAX_NUMBER_TO_DISPLAY + 1}-\n            {(startIndex + 1) * MAX_NUMBER_TO_DISPLAY} / {solutions.length}\n          </p>\n          {solutions.length > (startIndex + 1) * MAX_NUMBER_TO_DISPLAY && (\n            <button\n              onClick={() => {\n                setStartIndex(startIndex => startIndex + 1)\n              }}\n            >\n              Next\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\nexport default RecurrenceSolutions\n","import React from \"react\"\nimport { COLUMN_SIZE, MEDIUM_CIRCLE_RADIUS, SQRT2 } from \"../../constants.js\"\nimport classes from \"./styles.module.scss\"\n\nexport const computeSolutions = (links, state, solutions) => {\n  if (!links[state]) return solutions\n\n  const [subWord1, subWord2] = state.split(\"-\")\n  return links[state].reduce((accumulator, { dx, dy }) => {\n    const sw1 = subWord1.slice(0, subWord1.length + dx)\n    const sw2 = subWord2.slice(0, subWord2.length + dy)\n    const char1 = subWord1.slice(subWord1.length + dx, subWord1.length)\n    const char2 = subWord2.slice(subWord2.length + dy, subWord2.length)\n\n    const newState = `${sw1}-${sw2}`\n    const newSolutions = solutions.map(({ word1, word2 }) => ({\n      word1: `${char1 || \"_\"}${word1}`,\n      word2: `${char2 || \"_\"}${word2}`,\n    }))\n\n    return [...accumulator, ...computeSolutions(links, newState, newSolutions)]\n  }, [])\n}\n\nexport const fillLinksWithPaths = (links, solutions) => {\n  solutions.forEach(({ word1, word2 }) => {\n    for (let i = 1; i <= word1.length; i++) {\n      const subWord1 = word1\n        .slice(0, i)\n        .split(\"\")\n        .filter(e => e !== \"_\")\n        .join(\"\")\n      const subWord2 = word2\n        .slice(0, i)\n        .split(\"\")\n        .filter(e => e !== \"_\")\n        .join(\"\")\n\n      const char1 = word1.slice(i - 1, i)\n      const char2 = word2.slice(i - 1, i)\n\n      const used_dx = char1 === \"_\" ? 0 : -1\n      const used_dy = char2 === \"_\" ? 0 : -1\n      const key = `_${subWord1}-_${subWord2}`\n      links[key] = links[key].map(({ dx, dy, paths }) =>\n        dx === used_dx && dy === used_dy\n          ? { dx, dy, paths: [...paths, `${word1}-${word2}`] }\n          : { dx, dy, paths }\n      )\n    }\n  })\n  return links\n}\n\nconst isSelected = (selectedSolution, paths) => paths.includes(selectedSolution)\n\nconst Links = ({ links, showSolutions, selectedSolution }) => {\n  return (\n    <>\n      {Object.keys(links).reduce((accumulator, key) => {\n        return [\n          ...accumulator,\n          ...links[key].map(({ dx, dy, paths }) => {\n            const [subWord1, subWord2] = key.split(\"-\")\n            const Dx =\n              dx === 0\n                ? 0\n                : dy === 0\n                ? MEDIUM_CIRCLE_RADIUS\n                : MEDIUM_CIRCLE_RADIUS / SQRT2\n\n            const Dy =\n              dy === 0\n                ? 0\n                : dx === 0\n                ? MEDIUM_CIRCLE_RADIUS\n                : MEDIUM_CIRCLE_RADIUS / SQRT2\n\n            return subWord1.length + dx > 0 && subWord2.length + dy > 0 ? (\n              <line\n                x1={COLUMN_SIZE * (subWord1.length + dx + 0.5) + Dx}\n                y1={COLUMN_SIZE * (subWord2.length + dy + 0.5) + Dy}\n                x2={COLUMN_SIZE * (subWord1.length + 0.5) - Dx}\n                y2={COLUMN_SIZE * (subWord2.length + 0.5) - Dy}\n                className={`${classes.link} ${\n                  showSolutions && paths.length === 0 ? classes.transparent : \"\"\n                } ${\n                  showSolutions && isSelected(selectedSolution, paths)\n                    ? dx === dy\n                      ? subWord1[subWord1.length - 1] ===\n                        subWord2[subWord2.length - 1]\n                        ? classes.matchLink\n                        : classes.missmatchLink\n                      : classes.emptyLink\n                    : \"\"\n                }`}\n              />\n            ) : null\n          }),\n        ]\n      }, [])}\n    </>\n  )\n}\nexport default Links\n","import React, { useState, useEffect } from \"react\"\nimport {\n  Grid,\n  InteractiveCircle,\n  DisplayValues,\n} from \"src/components/DynamicProgram/atoms/Grid\"\nimport { COLUMN_SIZE } from \"src/components/DynamicProgram/constants.js\"\n\nimport classes from \"./styles.module.scss\"\n\nimport RecurrenceRelation from \"src/components/DynamicProgram/atoms/RecurrenceRelation\"\nimport RecurrenceExplanation from \"src/components/DynamicProgram/atoms/RecurrenceExplanation\"\nimport RecurrenceSolutions from \"src/components/DynamicProgram/atoms/RecurrenceSolutions\"\nimport Links, {\n  computeSolutions,\n  fillLinksWithPaths,\n} from \"src/components/DynamicProgram/atoms/Links\"\n\nconst MAX_NUMBER_OF_SOLUTION_TO_DISPLAY = 10\n\nconst nextHorizontal = (subWord1, subWord2, word1, word2) => {\n  if (subWord1.length < word1.length + 1)\n    return { subWord1: `_${word1.slice(0, subWord1.length)}`, subWord2 }\n  if (subWord2.length < word2.length + 1)\n    return { subWord1: \"_\", subWord2: `_${word2.slice(0, subWord2.length)}` }\n  return null\n}\nconst nextVertical = (subWord1, subWord2, word1, word2) => {\n  if (subWord2.length < word2.length + 1)\n    return { subWord2: `_${word2.slice(0, subWord2.length)}`, subWord1 }\n  if (subWord1.length < word1.length + 1)\n    return { subWord2: \"_\", subWord1: `_${word1.slice(0, subWord1.length)}` }\n  return null\n}\n\nconst FullAlgo = ({ startWord1, startWord2 }) => {\n  const [word1, setWord1] = useState(startWord1)\n  const [word2, setWord2] = useState(startWord2)\n  const [subWord1, setSubWord1] = useState(`_`)\n  const [subWord2, setSubWord2] = useState(`_`)\n  const [values, setValues] = useState({ \"_-_\": 0 })\n  const [links, setLinks] = useState({})\n  const [showRecurrenceRelation, setShowRecurrenceRelation] = useState(true)\n  const [showSolutions, setShowSolutions] = useState(false)\n  const [solutions, setSolutions] = useState([])\n  const [selectedSolution, setSelectedSolution] = useState(\"\")\n\n  useEffect(() => {\n    setValues({ \"_-_\": 0 })\n    setLinks({})\n    setShowRecurrenceRelation(true)\n    setSubWord1(`_`)\n    setSubWord2(`_`)\n    setShowSolutions(false)\n    setSolutions([])\n  }, [word1, word2])\n\n  const next = () => {\n    const newValues = nextHorizontal(subWord1, subWord2, word1, word2)\n    if (!newValues && !showSolutions) {\n      const newSolutions = computeSolutions(links, `_${word1}-_${word2}`, [\n        { word1: \"\", word2: \"\" },\n      ])\n      setSolutions(newSolutions)\n      setLinks(fillLinksWithPaths(links, newSolutions))\n      setShowRecurrenceRelation(false)\n      setShowSolutions(true)\n    } else if (!showSolutions) {\n      const { subWord1, subWord2 } = newValues\n      setSubWord1(subWord1)\n      setSubWord2(subWord2)\n    }\n  }\n\n  return (\n    <>\n      <div className={classes.container}>\n        <div className={classes.grid}>\n          <div className={classes.inputContainer}>\n            <input\n              onChange={event => setWord1(event.target.value.toUpperCase())}\n              value={word1}\n            />\n            <input\n              onChange={event => setWord2(event.target.value.toUpperCase())}\n              value={word2}\n            />\n          </div>\n          <svg\n            viewBox={`0 0 ${COLUMN_SIZE * (word1.length + 2)} ${COLUMN_SIZE *\n              (word2.length + 2)}`}\n            style={{ width: \"100%\", maxHeight: \"20cm\" }}\n          >\n            <Grid word1={word1} word2={word2} />\n            <DisplayValues word1={word1} word2={word2} values={values} />\n\n            {showRecurrenceRelation && (\n              <RecurrenceRelation\n                subWord1={subWord1}\n                subWord2={subWord2}\n                values={values}\n                setValues={setValues}\n                links={links}\n                setLinks={setLinks}\n                subStep=\"COMPUTE\"\n              />\n            )}\n            <Links\n              links={links}\n              showSolutions={showSolutions}\n              selectedSolution={selectedSolution}\n            />\n          </svg>\n        </div>\n        <div className={classes.explanation}>\n          {showSolutions ? (\n            <RecurrenceSolutions\n              solutions={solutions}\n              selectedSolution={selectedSolution}\n              setSelectedSolution={setSelectedSolution}\n              MAX_NUMBER_TO_DISPLAY={MAX_NUMBER_OF_SOLUTION_TO_DISPLAY}\n            />\n          ) : (\n            <RecurrenceExplanation\n              subWord1={subWord1}\n              subWord2={subWord2}\n              values={values}\n            />\n          )}\n        </div>\n      </div>\n      <button onClick={next}>Next</button>\n    </>\n  )\n}\n\nexport default FullAlgo\n","import React from \"react\"\nimport { PRESENT, COMPUTE, SAVE, RECURRENCE_DATA } from \"../../constants.js\"\nimport classes from \"./styles.module.scss\"\nimport {\n  Words,\n  Chars,\n  Score,\n  Value,\n} from \"src/components/DynamicProgram/atoms/Solutions\"\nimport { getCost } from \"../RecurrenceRelation\"\n\nconst RecurrenceExplanation = ({ subWord1, subWord2, values, subStep }) => {\n  subStep = subStep || PRESENT\n\n  const key = `${subWord1}-${subWord2}`\n\n  const subSolutions = RECURRENCE_DATA.slice(0, RECURRENCE_DATA.length - 1)\n    .map(({ dx, dy, color }) => {\n      if (subWord1.length + dx > 0 && subWord2.length + dy > 0) {\n        const subSolution1 = subWord1.slice(0, subWord1.length + dx)\n        const subSolution2 = subWord2.slice(0, subWord2.length + dy)\n        const char1 = subWord1.slice(subWord1.length + dx, subWord1.length)\n        const char2 = subWord2.slice(subWord2.length + dy, subWord2.length)\n\n        const value = values[`${subSolution1}-${subSolution2}`]\n        const score =\n          typeof value === \"number\" ? value + getCost(char1, char2) : \"?\"\n        return { subSolution1, subSolution2, char1, char2, value, score, color }\n      }\n    })\n    .filter(x => !!x)\n\n  const computationProblem = subSolutions.find(\n    //return the first element with missing value for recurrence computation\n    ({ score }) => score === \"?\"\n  )\n\n  return (\n    <div className={classes.container}>\n      {/* SHOW */}\n      <div className={classes.recurrenceShowBlock}>\n        <Words word1={subWord1} word2={subWord2} /> =\n        <div className={classes.solutionsContainer}>\n          {subSolutions.map(\n            ({ subSolution2, subSolution1, char2, char1, color }) => (\n              <div className={classes.alignLeft}>\n                <Words\n                  word1={subSolution1}\n                  word2={subSolution2}\n                  color={color}\n                />\n                <Chars char1={char1} char2={char2} />\n              </div>\n            )\n          )}\n        </div>\n      </div>\n      {/* compute */}\n      {computationProblem ? (\n        <>\n          <p>\n            We don't know the minimal cost of{\" \"}\n            <Words\n              word1={computationProblem.subSolution1}\n              word2={computationProblem.subSolution2}\n            />\n          </p>\n          <p>\n            You need it to compute the minimal cost of{\" \"}\n            <Words word1={subWord1} word2={subWord2} />\n          </p>\n        </>\n      ) : (\n        <div className={classes.recurrenceShowBlock}>\n          <Score value={values[`${subWord1}-${subWord2}`]} />=\n          {subSolutions.length > 1 ? \" min \" : \"\"}\n          <div\n            className={`${classes.solutionsContainer}\n              ${subSolutions.length > 1 ? classes.leftBar : \"\"}`}\n          >\n            {subSolutions.map(\n              ({ subSolution2, subSolution1, char2, char1, color, score }) => (\n                <div\n                  className={`${classes.alignLeft} ${classes.computationLine} ${\n                    score !== values[key] ? classes.hideLine : \"\"\n                  }`}\n                >\n                  <Score\n                    value={values[`${subSolution1}-${subSolution2}`]}\n                    color={color}\n                  />\n                  {\" + \"}\n                  <Value char1={char1} char2={char2} />\n                  {` = ${score}`}\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\nexport default RecurrenceExplanation\n","import React from \"react\"\nimport classes from \"./styles.module.scss\"\nimport { getCost } from \"../RecurrenceRelation\"\n\nexport const Words = ({ word1, word2, color }) => (\n  <div\n    className={classes.wordsContainer}\n    style={color ? { borderColor: color } : {}}\n  >\n    <p className={classes.word1}>{word1 || \"_\"}</p>\n    <p className={classes.word2}>{word2 || \"_\"}</p>\n  </div>\n)\n\nexport const Chars = ({ char1, char2 }) => (\n  <div\n    className={`${classes.charsContainer} ${\n      char1 === char2\n        ? classes.match\n        : !char1 || !char2 || char1 === \"_\" || char2 === \"_\"\n        ? classes.withEmpty\n        : classes.mismatch\n    }`}\n  >\n    <p className={classes.char1}>{char1 || \"_\"}</p>\n    <p className={classes.char2}>{char2 || \"_\"}</p>\n  </div>\n)\n\nexport const Score = ({ value, color }) => (\n  <span className={classes.score} style={color ? { borderColor: color } : {}}>\n    {typeof value === \"number\" ? value : \"?\"}\n  </span>\n)\n\nexport const Value = ({ char1, char2 }) => (\n  <span\n    className={`${\n      char1 === char2\n        ? classes.matchValue\n        : !char1 || !char2 || char1 === \"_\" || char2 === \"_\"\n        ? classes.withEmptyValue\n        : classes.mismatchValue\n    }`}\n  >\n    {getCost(char1, char2)}\n  </span>\n)\n\nexport const Solution = ({ word1, word2, onEnter, isSelected }) => (\n  <div\n    onMouseEnter={onEnter}\n    className={`${classes.solutionContainer} ${\n      isSelected ? classes.isSelected : \"\"\n    }`}\n  >\n    {word1.split(\"\").map((_, index) => (\n      <Chars char1={word1[index]} char2={word2[index]} />\n    ))}\n  </div>\n)\n","import React, { useState } from \"react\"\nimport {\n  Grid,\n  InteractiveCircle,\n  DisplayValues,\n} from \"src/components/DynamicProgram/atoms/Grid\"\nimport { COLUMN_SIZE } from \"src/components/DynamicProgram/constants.js\"\n\nimport classes from \"./styles.module.scss\"\n\nimport RecurrenceRelation from \"src/components/DynamicProgram/atoms/RecurrenceRelation\"\nimport RecurrenceExplanation from \"src/components/DynamicProgram/atoms/RecurrenceExplanation\"\n\nconst InteractiveRecurrence = ({ startWord1, startWord2 }) => {\n  const [word1, setWord1] = useState(startWord1)\n  const [word2, setWord2] = useState(startWord2)\n  const [subWord1, setSubWord1] = useState(`_${startWord1}`)\n  const [subWord2, setSubWord2] = useState(`_${startWord2}`)\n  const [values, setValues] = useState({ \"_-_\": 0 })\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.grid}>\n        <div className={classes.inputContainer}>\n          <input\n            onChange={event => setWord1(event.target.value.toUpperCase())}\n            value={word1}\n          />\n          <input\n            onChange={event => setWord2(event.target.value.toUpperCase())}\n            value={word2}\n          />\n        </div>\n        <svg\n          viewBox={`0 0 ${COLUMN_SIZE * (word1.length + 2)} ${COLUMN_SIZE *\n            (word2.length + 2)}`}\n          style={{ width: \"100%\", maxHeight: \"20cm\" }}\n        >\n          <Grid word1={word1} word2={word2} />\n          <DisplayValues word1={word1} word2={word2} values={values} />\n\n          <RecurrenceRelation\n            subWord1={subWord1}\n            subWord2={subWord2}\n            values={values}\n            setValues={setValues}\n            subStep=\"COMPUTE\"\n          />\n          <InteractiveCircle\n            word1={word1}\n            word2={word2}\n            onEnter={(sw1, sw2) => () => {\n              setSubWord1(sw1)\n              setSubWord2(sw2)\n            }}\n          />\n        </svg>\n      </div>\n      <div className={classes.explanation}>\n        <RecurrenceExplanation\n          subWord1={subWord1}\n          subWord2={subWord2}\n          values={values}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default InteractiveRecurrence\n","import React from \"react\"\nimport {\n  COLUMN_SIZE,\n  RECURRENCE_DATA,\n  MEDIUM_CIRCLE_RADIUS,\n  SQRT2,\n  PRESENT,\n  COMPUTE,\n  SAVE,\n} from \"../../constants.js\"\nimport classes from \"./styles.module.scss\"\n\nexport const getCost = (char1, char2) => {\n  if (char1 === char2) return 0\n  if (char1 === \"_\" || char2 === \"_\") return 1\n  if (char1 === \"\" || char2 === \"\") return 1\n  return 2\n}\n\nconst RecurrenceRelation = ({\n  subWord1,\n  subWord2,\n  values,\n  setValues,\n  links,\n  setLinks,\n  subStep,\n}) => {\n  subStep = subStep || PRESENT\n  const key = `${subWord1}-${subWord2}`\n  let isComputable = false\n  let minValue\n  const recurrentValues = {}\n\n  isComputable = true\n  RECURRENCE_DATA.slice(0, RECURRENCE_DATA.length - 1).forEach(\n    ({ dx, dy }, index) => {\n      if (subWord1.length + dx > 0 && subWord2.length + dy > 0) {\n        const sw1 = subWord1.slice(0, subWord1.length + dx)\n        const sw2 = subWord2.slice(0, subWord2.length + dy)\n        const char1 = subWord1.slice(subWord1.length + dx, subWord1.length)\n        const char2 = subWord2.slice(subWord2.length + dy, subWord2.length)\n        if (typeof values[`${sw1}-${sw2}`] === \"number\") {\n          recurrentValues[index] = {\n            value: values[`${sw1}-${sw2}`] + getCost(char1, char2),\n            dx,\n            dy,\n          }\n        } else {\n          isComputable = false\n        }\n      }\n    }\n  )\n  if (isComputable) {\n    minValue = Object.keys(recurrentValues)\n      .map(key => recurrentValues[key].value)\n      .sort((a, b) => a - b)[0]\n    if (typeof values[key] !== \"number\") {\n      setValues({ ...values, [key]: minValue })\n      if (links && setLinks) {\n        setLinks({\n          ...links,\n          [key]: Object.keys(recurrentValues)\n            .filter(key => recurrentValues[key].value === minValue)\n            .map(key => ({\n              dx: recurrentValues[key].dx,\n              dy: recurrentValues[key].dy,\n              paths: [],\n            })),\n        })\n      }\n    }\n  }\n\n  return (\n    <>\n      {RECURRENCE_DATA.slice(0, RECURRENCE_DATA.length - 1).map(\n        ({ dx, dy }, index) => {\n          const Dx =\n            dx === 0\n              ? 0\n              : dy === 0\n              ? MEDIUM_CIRCLE_RADIUS\n              : MEDIUM_CIRCLE_RADIUS / SQRT2\n          const Dy =\n            dy === 0\n              ? 0\n              : dx === 0\n              ? MEDIUM_CIRCLE_RADIUS\n              : MEDIUM_CIRCLE_RADIUS / SQRT2\n          return subWord1.length + dx > 0 && subWord2.length + dy > 0 ? (\n            <line\n              x1={COLUMN_SIZE * (subWord1.length + dx + 0.5) + Dx}\n              y1={COLUMN_SIZE * (subWord2.length + dy + 0.5) + Dy}\n              x2={COLUMN_SIZE * (subWord1.length + 0.5) - Dx}\n              y2={COLUMN_SIZE * (subWord2.length + 0.5) - Dy}\n              className={`${classes.link} ${\n                subStep === SAVE\n                  ? classes.saveLink\n                  : subStep === COMPUTE &&\n                    isComputable &&\n                    recurrentValues[index] &&\n                    recurrentValues[index].value === minValue\n                  ? classes.goodLink\n                  : subStep === COMPUTE && isComputable\n                  ? classes.badLink\n                  : classes.notComputableLink\n              }`}\n            />\n          ) : null\n        }\n      )}\n      {RECURRENCE_DATA.map(({ dx, dy, color }, index) =>\n        subWord1.length + dx > 0 && subWord2.length + dy > 0 ? (\n          <circle\n            cx={COLUMN_SIZE * (subWord1.length + dx + 0.5)}\n            cy={COLUMN_SIZE * (subWord2.length + dy + 0.5)}\n            r={MEDIUM_CIRCLE_RADIUS}\n            className={`${classes.circle}  ${\n              subStep === SAVE\n                ? classes.saveCircle\n                : subStep === COMPUTE &&\n                  isComputable &&\n                  recurrentValues[index] &&\n                  recurrentValues[index].value === minValue\n                ? classes.goodCircle\n                : RECURRENCE_DATA.length === index + 1\n                ? classes.resultCircle\n                : subStep === COMPUTE && isComputable\n                ? classes.badCircle\n                : classes.notComputableCircle\n            }`}\n            style={subStep === PRESENT ? { stroke: color } : {}}\n          />\n        ) : null\n      )}\n    </>\n  )\n}\nexport default RecurrenceRelation\n","module.exports = __webpack_public_path__ + \"static/formule_rec_ADN-b845201b7dcf1be96a153de873b85f8e.png\";","module.exports = __webpack_public_path__ + \"static/alignement-a543a051914696369ed13900a1fe943a.png\";","module.exports = __webpack_public_path__ + \"static/arbre_coupe3-c9807a25ccb4bcb0b0ff8ee90164cb14.svg\";","module.exports = __webpack_public_path__ + \"static/arbre_min-4401d61c0a058383ea50003a21a8c6d1.svg\";","module.exports = __webpack_public_path__ + \"static/arbre_coupe1-67d0c17d9ccfd5e01e09398f197797a0.svg\";","module.exports = __webpack_public_path__ + \"static/trois_possibilites-45e6bf4fc08b7f8b3edfb81b72f68fe4.png\";","module.exports = __webpack_public_path__ + \"static/parcourt_tableau-3fd588082927a07088eaf557504b87aa.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nvar styles = {\n  entering: {\n    opacity: 1\n  },\n  entered: {\n    opacity: 1\n  }\n};\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Fade transition is used by the [Modal](/components/modal/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Fade = React.forwardRef(function Fade(props, ref) {\n  var children = props.children,\n      inProp = props[\"in\"],\n      onEnter = props.onEnter,\n      onExit = props.onExit,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      other = _objectWithoutProperties(props, [\"children\", \"in\", \"onEnter\", \"onExit\", \"style\", \"timeout\"]);\n\n  var theme = useTheme();\n  var handleRef = useForkRef(children.ref, ref);\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    reflow(node); // So the animation always start from the start.\n\n    var transitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);\n    node.style.transition = theme.transitions.create('opacity', transitionProps);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  var handleExit = function handleExit(node) {\n    var transitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);\n    node.style.transition = theme.transitions.create('opacity', transitionProps);\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  return React.createElement(Transition, _extends({\n    appear: true,\n    \"in\": inProp,\n    onEnter: handleEnter,\n    onExit: handleExit,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], {}, style, {}, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Fade.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  \"in\": PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Fade;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Fade from '../Fade';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    // Improve scrollable dialog support.\n    zIndex: -1,\n    position: 'fixed',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent',\n    // Disable scroll capabilities.\n    touchAction: 'none'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\nvar Backdrop = React.forwardRef(function Backdrop(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$invisible = props.invisible,\n      invisible = _props$invisible === void 0 ? false : _props$invisible,\n      open = props.open,\n      transitionDuration = props.transitionDuration,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"invisible\", \"open\", \"transitionDuration\"]);\n\n  return React.createElement(Fade, _extends({\n    \"in\": open,\n    timeout: transitionDuration\n  }, other), React.createElement(\"div\", {\n    className: clsx(classes.root, className, invisible && classes.invisible),\n    \"aria-hidden\": true,\n    ref: ref\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Backdrop.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBackdrop'\n})(Backdrop);","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), React.createElement(TransitionComponent, _extends({\n    appear: true,\n    \"in\": open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onClick: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * We are empirically mapping the variant prop to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import React, { useState } from \"react\"\n\nimport Layout from \"src/components/layout\"\nimport SEO from \"src/components/seo\"\n\nimport InteractiveGrid from \"src/components/DynamicProgram/explanations/InteractiveGrid\"\nimport InteractiveRecurrence from \"src/components/DynamicProgram/explanations/InteractiveRecurrence\"\nimport FullAlgo from \"src/components/DynamicProgram/explanations/FullAlgo\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\n\n//import images\nimport simplification_ADN from \"./images/simplification_ADN.png\"\nimport alignement from \"./images/alignement.png\"\nimport calcul_score from \"./images/calcul_score.png\"\nimport trois_possibilites from \"./images/trois_possibilites.png\"\nimport formule_rec_ADN from \"./images/formule_rec_ADN.png\"\nimport arbre_min from \"./images/arbre_min.svg\"\nimport arbre_coupe1 from \"./images/arbre_coupe1.svg\"\nimport arbre_coupe2 from \"./images/arbre_coupe2.svg\"\nimport arbre_coupe3 from \"./images/arbre_coupe3.svg\"\nimport arbre_elague from \"./images/arbre_elague.png\"\nimport recurrence_tableau from \"./images/recurrence_tableau.png\"\nimport parcourt_tableau from \"./images/parcourt_tableau.png\"\n\nconst Page = () => {\n  const [openFullTree, setOpenFullTree] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpenFullTree(true)\n  }\n\n  const handleClose = () => {\n    setOpenFullTree(false)\n  }\n  return (\n    <Layout location=\"/tic-tac-toe\" currentLanguage=\"Français\">\n      <SEO title=\"Morpion\" />\n\n      <p>\n        Nous allons voir ici un exemple extrêmement classique de programmation\n        dynamique : l'algorithme de{\" \"}\n        <a href=\"https://fr.wikipedia.org/wiki/Algorithme_de_Needleman-Wunsch\">\n          Needleman-Wunsch\n        </a>\n        . Il a l'avantage de partir d'un problème qui semble complexe avec de\n        nombreux cas à calculer pour se ramener à la simple écriture d'un\n        tableau à deux dimensions.\n      </p>\n      <p>\n        Nous allons voir ici un exemple extrêmement classique de{\" \"}\n        <strong>programmation dynamique</strong> : l'algorithme de\n        Needleman-Wunsch. Il a l'avantage de partir d'un problème qui semble\n        complexe avec de nombreux cas à calculer pour se ramener à la simple\n        écriture d'un tableau à deux dimensions.\n      </p>\n      <h2>Mise en contexte (Un peu de SVT)</h2>\n      <p>\n        Pour une fois, nous n'allons pas commencer directement par de\n        l'informatique, mais par un peu de SVT, et plus précisément de la\n        génétique. Vous savez sans doute que votre corps est composé de\n        cellules. Mais savez vous comment ces cellules savent ce qu'elles\n        doivent faire&nbsp;? Pourquoi produisent-elles des cheveux bruns chez\n        certaines personnes, alors que chez d'autres ce sont des cheveux\n        blonds&nbsp;? Cette <strong>information</strong> est cachée au milieu de\n        vos cellules, dans le noyau. Mais cette information n'est pas écrite en\n        français, ni même en allemand. Il s'agit de plusieurs molécules\n        extrêmement longues sur lesquelles 4 motifs se répètent et que l'on\n        appelle <strong>ADN</strong>. On pourrait toujours s'amuser à dessiner\n        chaque atome de cette molécule. Mais comme on l'a dit, on peut la\n        simplifier par une succession de 4 motifs différents. On a plus qu'à\n        dérouler un des deux bruns d'ADN, ce qui nous donne une chaîne composée\n        de nos 4 motifs. Et comme des dessins ce n'est pas très pratique, on va\n        représenter ces motifs par des lettres. On obtient donc une langue\n        composée uniquement de <strong>4 symboles</strong> que l'on notera{\" \"}\n        <strong>A</strong>, <strong>C</strong>, <strong>G</strong>,{\" \"}\n        <strong>T</strong>, et qui sont appelés <strong>nucléotïdes</strong>.\n        Voici un petit dessin pour résumer la simplification de notre\n        représentation de l'ADN, en partant de la représentation moléculaire\n        vers la représentation sous forme de lettres.\n      </p>\n      <img src={simplification_ADN} />\n      <p>\n        Il reste alors à trouver l'utilité de chaque code. Pour cela, on suppose\n        que des codes qui se ressemblent ont la même utilité. Du coup, il faut\n        savoir si deux codes se ressemblent. Et c'est là qu'intervient\n        l'algorithme que nous allons voir. Le problème c'est que si deux codes\n        paraissent différents à première vue, peut être qu'en ajoutant des\n        espaces, on se rendra compte que ces codes ne sont pas si différents,\n        voire quasiment identiques. Le but pour l'informaticien, est donc de\n        proposer un algorithme qui prend deux séquences d'ADN est qui essaie de\n        les aligner au mieux. Comme vous le voyez si dessous, ajouter deux\n        espaces permet d'améliorer l'alignement des deux séquences.\n      </p>\n      <img src={alignement} />\n      <h2>Formalisation</h2>\n      <p>\n        Comme dit précédemment, il va falloir aligner deux{\" \"}\n        <strong>séquences</strong> d'ADN (deux mots composés des lettres A, C, G\n        et T). Pour cela, il faut donner à l'algorithme les deux séquences à\n        aligner. Mais il faut aussi lui donner un moyen de comparer différents\n        alignements. Pour cela, nous allons définir une fonction qui va donner\n        un <strong>score</strong> aux alignements de sorte qu'un{\" \"}\n        <strong>bon alignement</strong> ait un <strong>score élevé</strong>, et\n        un <strong>mauvais alignement</strong>, un <strong>score bas</strong>.\n      </p>\n      <p>Dans un alignement, on peut rencontrer 3 configurations&nbsp;:</p>\n      <ul>\n        <li>\n          Les lettres sont <strong>identiques</strong> : on dit alors qu'elles{\" \"}\n          <strong>matchent</strong>. C'est ce que l'on veut voir le plus\n          souvent. On va donc dire qu'à chaque fois que 2 lettres sont\n          identiques cela vaut <strong>+1</strong>.{\" \"}\n        </li>\n        <li>\n          Les lettres sont <strong>différentes</strong> : par exemple un A est\n          remplacé par un T dans l'autre séquence. On appelle cela une{\" \"}\n          <strong>substitution</strong>, et ce n'est pas ce que l'on cherche. On\n          va donc dire que ça vaut <strong>-1</strong>\n        </li>\n        <li>\n          Il n'y a <strong>rien en face</strong> de la lettre. Pour mieux\n          aligner d'autres parties on a décidé de laisser un espace à cet\n          endroit. On appelle cela une <strong>délétion</strong>, ça peut\n          arriver mais c'est plus rare qu'une substitution. On lui donnera donc\n          un score de <strong>-2</strong> pour montrer que l'on préfère avoir\n          une substitution.\n        </li>\n      </ul>\n      <p></p>\n      <p>\n        Le score est alors l'addition de toutes ces valeurs. Voici un exemple de\n        calcul du score d'un alignement. Il suffit de compter le nombre de{\" \"}\n        <strong>matchs</strong>, de <strong>délétions</strong> et de{\" \"}\n        <strong>substitutions</strong> et d'y appliquer le{\" \"}\n        <strong>score</strong> associé.\n        <br /> le score est donc : 1 + (-1) + 1 + (-2) + 1 + (-1) + (-1) + 1 =\n        -1\n      </p>\n      <img src={calcul_score} />\n      <p>\n        Vous pouvez bien sûr choisir d'autres valeurs. En biologie, il existe\n        des tableaux basés sur des études statistiques pour savoir s'il est plus\n        fréquent qu'un A se transforme en C ou qu'un T se transforme en G pour\n        avoir des scores plus adaptés à la réalité des mutations. Le calcul du\n        score est plus précis, mais l'algorithme reste le même, et c'est tout ce\n        qui nous intéresse ici.\n      </p>\n      <h2>Impossible d'y aller naïvement</h2>\n      <p>\n        Bon, concrètement tout ce qu'on a à faire, c'est placer des trous aux\n        bons endroits. En effet, on ne peut pas changer l'ordre des lettres, on\n        peut juste se dire «&nbsp;Tiens je vais mettre une délétion ici pour\n        obtenir de meilleurs alignements après&nbsp;». Du coup ça ne devrait pas\n        être trop dur de trouver une solution. Bon ok, avec 10 lettres, on peut\n        s'en sortir à la main. Mais pour être sûr d'avoir le meilleur score, il\n        faudrait tester toutes les possibilités. Et là, c'est beaucoup plus dur.\n        Pour 1 délétion, on a 20 configurations différentes. Pour 2 délétions,\n        on a 180 possibilités. Pour 3 délétions, on passe à 1140 possibilités.\n        Vous trouvez que ça monte vite&nbsp;? Attendez, là ce n'est que pour des\n        ADNs de 10 lettres. Normalement, les gènes contiennent des centaines de\n        lettres, du coup pour 2 délétions, ca fait 19.900 possibilités. Pour 3\n        délétions&nbsp;? On a 1.313.400 possibilités.\n        <br /> Vous l'aurez compris, écrire toutes les possibilités, calculer\n        leur score et retenir celles qui ont le score minimal n'est pas vraiment\n        la bonne solution.\n      </p>\n      <h2>Une relation de récurrence insuffisante</h2>\n      <p>\n        Bon, tout tester c'était un peu barbare comme méthode. On va donc tenter\n        de prendre du recul et regarder ce que l'on connaît déjà en\n        informatique. Si on y réfléchi, ce problème peut se résoudre par{\" \"}\n        <strong>récurrence</strong>. Je m'explique. On cherche à obtenir une\n        fonction qui nous donne le meilleur alignement de deux séquences ADN.\n        Quand on nous donne les deux séquences, on sait que le meilleur\n        alignement ne peut finir que de 3 manières différentes.\n      </p>\n      <ul>\n        <li>\n          On prend la dernière lettre des deux séquences, ce qui donne un{\" \"}\n          <strong>match</strong> ou une <strong>substitution</strong>\n        </li>\n        <li>\n          On fait une <strong>délétion</strong> en haut\n        </li>\n        <li>\n          On fait une <strong>délétion</strong> en bas\n        </li>\n      </ul>\n      <p></p>\n      <p>\n        Pour ceux qui préfèrent un schéma, voici un exemple des trois\n        possibilités.\n      </p>\n      <img src={trois_possibilites} />\n      <p>\n        Pour chaque un des trois cas, on va appliquer notre fonction aux\n        séquences restantes pour calculer le <strong>score maximal</strong>, et\n        ainsi de suite. On va donc{\" \"}\n        <strong>réduire la longueur des séquences</strong> à aligner au fur et à\n        mesure que la fonction est appelée. Et ce jusqu'à ce qu'une des deux\n        séquences soit vide. On ne pourra alors que mettre des{\" \"}\n        <strong>délétions</strong> pour compléter les nucléotides restants.\n      </p>\n      <p>\n        Mathématiquement la relation de récurrence que l'on utilise est celle\n        ci&nbsp;:{\" \"}\n      </p>\n      <img src={formule_rec_ADN} />\n      <p>\n        Ne paniquez pas si vous ne la comprenez pas directement la relation de\n        récurrence. Soit vous prenez le temps de la lire doucement, et vous\n        verrez qu'il ne s'agit que de la traduction de ce que l'on a dit\n        précédemment. Soit vous attendez, j'ai dessiné l'arbre de récurrence\n        qu'elle produit plus loin.\n      </p>\n      <p>\n        <strong>Problème</strong>&nbsp;: à chaque appelle à la fonction, on\n        appel à nouveau la fonction 3 fois. Autant le dire tout de suite, ça\n        sent la <strong>complexité exponentielle</strong> à plein nez. Tant\n        d'efforts pour rien&nbsp;? Moïra aurait, elle, dévolu aux gènes les\n        complexités renverse-ordinateurs&nbsp;? (#LesPerses #Eschil) Que nenni,\n        cette relation de récurrence vaincra&nbsp;! Il suffit d'ouvrir les yeux\n        sur notre bêtise.\n      </p>\n      <h2>Une impression de déjà vue</h2>\n      <p>\n        Bon, ouvrir les yeux sur une relation de récurrence, ce n'est pas\n        évident, surtout si elle est écrite sous une forme mathématique\n        élégante, mais admettons le, <strong>peu visuelle</strong>. Et que fait\n        on quand on ne visualise pas bien une formule ? On la teste \\o/ ! C'est\n        donc avec une énorme gentillesse, que je vous ai dessiné de notre{\" \"}\n        <strong>arbre de récurrence</strong> pour un cas très simple mais aussi\n        très éclairant. Enfin très simple ... il fait déjà dans les 130 lignes.\n        Il n'est bien entendu pas nécessaire de le lire en entier (cliquez sur\n        l'image pour afficher la totalité de l'image). Il est juste là pour vous\n        montrer comment fonctionne cette représentation (observez le bien, il\n        m'a fallut beaucoup de temps pour le faire ^^)\n      </p>\n      <p>\n        Vous pouvez entre autre remarquer qu'à chaque problème sont associés 3\n        sous-problèmes. Et que tous les cas terminaux (ceux qui finissent les\n        lignes) sont tous des sous-problèmes où l'une des séquences est vide.\n        Vous pouvez <strong>cliquer sur l'image</strong> pour l'afficher.{\" \"}\n        <strong>Attention, c'est une grosse image</strong>.\n      </p>\n      <img src={arbre_min} onClick={handleClickOpen} />\n      <Dialog onClose={handleClose} open={openFullTree}>\n        <DialogTitle>Arbre complet des alignements possibles</DialogTitle>\n        <DialogContent>\n          <img src=\"\" alt=\"\" />\n        </DialogContent>\n      </Dialog>\n      <p>\n        Avez-vous remarqué quelque chose ? Non ? Normal, vous avez forcément le\n        nez collé au dessin. Nous allons donc prendre un peu de hauteur en\n        coupant ce dessin en trois parti pour essailler de tout faire tenir sur\n        une page.Et pour vous facilite d'avantage la tache, j'ai pris encore un\n        peu de mon temps pour faire du coloriage. Il est temps que je vous\n        explique pourquoi. A chaque fois que vous voyez dans le fond deux\n        rectangles de la <strong>même couleur</strong>, c'est que ces parties de\n        l'arbres font exactement la même chose. C'est le{\" \"}\n        <strong>même calcul</strong>, car les séquences qui restent à aligner\n        sont les mêmes. S'il n'y a pas de rectangle, c'est que ce calcul\n        n'apparaît qu'une fois.\n      </p>\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <img src={arbre_coupe1} />\n        </div>\n        <div class=\"col-sm-4\">\n          <img src={arbre_coupe2} />\n        </div>\n        <div class=\"col-sm-4\">\n          <img src={arbre_coupe3} />\n        </div>\n      </div>\n      <p>\n        Si vous n'avez pas compris ce que je viens de dire, voici quelques\n        exemples. Vous pouvez aller vérifier juste au dessus. A chaque fois\n        qu'il y a un rectangle <strong>vert pâle</strong>, c'est que l'on\n        cherche à maximiser l'alignement entre <strong>A et A</strong>. Les{\" \"}\n        <strong>bleu clair</strong> correspondent à l'alignement de{\" \"}\n        <strong>ACG et A</strong>. Les <strong>jaunes</strong> correspondent à\n        l'alignement de <strong>ACG et AG</strong>. Et ainsi de suite.\n        <br /> Conclusion, on peut voir sur ce dessin que l'on calcule :\n      </p>\n      <ul>\n        <li>\n          <strong>25 fois</strong> l'alignement de <strong>A</strong> et{\" \"}\n          <strong>A</strong>\n        </li>\n        <li>\n          <strong>5 fois</strong> l'alignement de <strong>ACG</strong> et{\" \"}\n          <strong>A</strong>\n        </li>\n        <li>\n          <strong>3 fois</strong> l'alignement de <strong>ACG</strong> et{\" \"}\n          <strong>AG</strong>\n        </li>\n      </ul>\n      <p>\n        Et encore, là c'est parce que j'ai eu pitié du logiciel de dessin. Car\n        avec des séquences ADN comportant des centaines de nucléotïdes (ici\n        elles font seulement 4 et 3 nucléotïdes), calculer plusieurs fois la\n        même chose risque vite de devenir l'enfer. Bref, il faut mettre un terme\n        à ce gaspillage grossier de <strong>capacité de calcul</strong>\n        .&nbsp;Mais en échange, il va falloir qu'on stock les résultats quelque\n        part. On va diminuer la <strong>complexité en temps</strong>, mais en\n        échange, nous allons devoir augmenter la{\" \"}\n        <strong>complexité en mémoire</strong>. Cette phrase vous parait obscure\n        ? Pas de panique, vous l'aurez comprise à la fin du prochain paragraphe.\n      </p>\n      <h2>La mémoïzation à la rescousse</h2>\n      <p>\n        Si on <strong>mémorise les résultats des sous problèmes</strong>, on\n        aura besoin de calculer les résultats qu'une seule fois. Du coup, on\n        calculera une fois l'arbre associé à l'alignement de A et A. Et à chaque\n        fois que l'on aura besoin d'aligner A et A, on aura juste à aller\n        chercher son score maximal en mémoire. De même pour l'alignement de ACG\n        et A ou de ACG et AG. Du coup, dans notre arbre, on verra{\" \"}\n        <strong>un seul gros rectangle jaune</strong>. Puis quand on retombera\n        sur un rectangle jaune, inutile de calculer l'arbre qui est à\n        l'intérieur, on a déjà la réponse en mémoire.\n        <br /> Vous pouvez voir le résultat de cette simplification sur l'arbre\n        ci-dessous. C'est le même calcul qu'avant, sauf que j'ai supprimé tous\n        les sous-arbre devenus inutiles. Plutôt efficace comme élagage, vous ne\n        trouvez pas ?\n      </p>\n      <img src={arbre_elague} />\n      <p>\n        Dire que l'on va mémoriser les résultats c'est bien beau. Mais pour ça,\n        il nous faut une méthode pratique/rapide pour mémoriser le score de nos{\" \"}\n        <strong>sous-problèmes</strong> en mémoire. Pour commencer, il faut\n        savoir combien de sous-problèmes nous devrons mémoriser. En gros, nos\n        sous problèmes consistent à trouver le meilleur alignement pour deux{\" \"}\n        <strong>séquences génétiques</strong> plus petites que les deux\n        séquences initiales. Par exemple, si au début une des séquences est\n        «&nbsp;ACGTCG&nbsp;» les <strong>sous-séquences</strong> seront\n        «&nbsp;ACGTCG&nbsp;», «&nbsp;ACGTC&nbsp;», «&nbsp;ACGT&nbsp;»,\n        «&nbsp;ACG&nbsp;», «&nbsp;AC&nbsp;», «&nbsp;A&nbsp;» et «&nbsp;&nbsp;»\n      </p>\n      <p>\n        Si les deux <strong>séquences</strong> contiennent n et m nucléoïdes, il\n        y a donc (n+1) <strong>sous-séquences</strong> pour la première, et\n        (m+1) <strong>sous-séquences</strong> pour la seconde séquence. En les\n        combinant, on obtient un total de (n+1)(m+1)\n        <strong>sous-problèmes</strong>. Ce qui se rangera facilement dans un\n        tableau de n+1 lignes et m+1 colonnes.\n      </p>\n      <p>\n        C'est fou&nbsp;! On vient de partir d'une{\" \"}\n        <strong>relation de récurrence</strong> qui nous demande de faire des\n        tas et des tas de calculs, et on obtient un simple tableau à remplir.\n      </p>\n      <p>\n        Si vous ne voyez pas comment utiliser le tableau, voici un exemple de\n        comment mémoriser les scores dans le tableau. C'est compliqué à\n        expliquer avec de mots, mais vous devriez comprendre avec le dessin. Il\n        vous suffit de passer votre souris par dessus une case pour voir à quel{\" \"}\n        <strong>sous-problème</strong> correspond cette case.\n      </p>\n\n      <InteractiveGrid startWord1=\"ABCDEFGHIJ\" startWord2=\"DEFGH\" />\n\n      <h2>Relation de récurrence nouvelle version</h2>\n      <p>\n        On sait maintenant qu'on peut aller beaucoup plus vite en mémorisant nos\n        résultats dans un tableau. Mais il nous reste à{\" \"}\n        <strong>adapter notre relation de récurrence au tableau</strong>. On a\n        fait assez de théorie, donc on va passer directement à un exemple.\n        Trouver la relation de récurrence pour «&nbsp;ACGTC&nbsp;» et\n        «&nbsp;AGGA&nbsp;» Comme pour notre première fonction, on a 3\n        possibilités qui donnent les relations dessinées ci-dessous,\n        représentées chacune d'une couleur.\n      </p>\n      <img src={recurrence_tableau} />\n      <p>\n        Les deux <strong>délétions</strong> seront toujours des{\" \"}\n        <strong>délétions</strong>. Par contre, la troisième relation peut être\n        soit un <strong>match</strong>, soit une <strong>substitution</strong>.\n        On aura un match si les lettres associées à la ligne et à la colonne\n        sont les mêmes, et une substitution dans le cas contraire.\n      </p>\n      <p>\n        Reste le cas de <strong>l'initialisation</strong>. La première ligne et\n        la première colonne, où l'on ne peut pas appliquer notre relation de\n        récurrence habituelle. Ce n'est pas vraiment ce qu'il y a de plus\n        compliqué. Car pour aligner une séquence avec rien, on ne peut faire que\n        des <strong>délétions</strong>. Ce qui va assez vite à calculer.\n      </p>\n      <p>\n        On peut remarquer, que pour calculer un score, il faut en connaître déjà\n        3. Celui situé en <strong>haut</strong>, celui à <strong>gauche</strong>{\" \"}\n        et celui en <strong>haut à gauche</strong>. Après avoir rempli la\n        première ligne et la première colonne. Avec notre relation de\n        récurrence, on peut compléter le tableau ligne par ligne, ou colonne par\n        colonne, ou en diagonale. Voici un schéma des 3 chemins de base à suivre\n        pour calculer l'ensemble du tableau.\n      </p>\n      <img src={parcourt_tableau} />\n      <p>\n        Vous pouvez bien sûr faire des chemins plus étranges si cela vous amuse\n        tant que ça vous pouvez appliquer la relation de récurrence. Ci dessous\n        vous pouvez compléter le tableau en passant votre souris sur les cases.\n        Si toutes les informations sont présentes, la relation de récurrence\n        sera calculée.\n      </p>\n      <InteractiveRecurrence startWord1=\"ATCGTCGA\" startWord2=\"AGGTGCGTA\" />\n      <p>\n        Conclusions, on a maintenant tous les <strong>sous-problèmes</strong>{\" \"}\n        possibles calculés. Remarquez au passage qu'on a inversé l'ordre de\n        résolution. Avant on partait des deux séquences à aligner, et on\n        simplifiait le problème en sous-problèmes, ce qui ne fonctionnait pas.\n        Et là, on est parti de rien, pour calculer petit à petit des\n        sous-problèmes de plus en plus gros jusqu'à atteindre le problème\n        demandé.\n      </p>\n      <p>\n        On connaît donc le <strong>score maximal</strong> qu'un alignement peut\n        obtenir. Si vous avez suivi, vous savez que c'est le score trouvé dans\n        la case tout en bas à droite du tableau. Mais il n'est pas marqué{\" \"}\n        <strong>comment on obtient ce score optimal</strong>. Pas marqué ? Vous\n        êtes sur ? Disons que ce n'est pas écrit explicitement, mais cela se\n        retrouve très facilement en faisant le chemin inverse.\n      </p>\n      <p>\n        Je m'explique. Pour obtenir ce <strong>score maximal</strong>, on ne\n        peut venir que de <strong>3 sous-problèmes</strong>. En appliquant\n        l'algorithme dans l'autre sens, on sait de{\" \"}\n        <strong>quel(s) sous-problème(s)</strong> vient notre score maximal. On\n        peut ainsi remonter tout le tableau, et donc trouver l'alignement\n        correspondant. Remarquez au passage que la solution optimale d'un\n        sous-problème peut venir de plusieurs sous-problèmes. En effet, il n'y a\n        pas forcément un seul alignement optimal, il peut y en avoir plusieurs.\n        Et cet algorithme les donne tous, ce qui n'est plutôt pas mal.\n      </p>\n      <FullAlgo startWord1=\"ABCD\" startWord2=\"ABD\" />\n    </Layout>\n  )\n}\n\nexport default Page\n","export const COLUMN_SIZE = 40\nexport const LARGE_CIRCLE_RADIUS = COLUMN_SIZE / 2 - 1\nexport const MEDIUM_CIRCLE_RADIUS = COLUMN_SIZE / 3\nexport const SMALL_CIRCLE_RADIUS = COLUMN_SIZE / 4\nexport const SQRT2 = Math.sqrt(2)\n\nexport const RECURRENCE_DATA = [\n  //all the circles are linked to the ast one\n  { dx: -1, dy: -1, color: \"red\" },\n  { dx: 0, dy: -1, color: \"blue\" },\n  { dx: -1, dy: 0, color: \"green\" },\n  { dx: 0, dy: 0, color: \"orange\" },\n]\n\nexport const PRESENT = \"PRESENT\"\nexport const COMPUTE = \"COMPUTE\"\nexport const SAVE = \"SAVE\"\n","module.exports = __webpack_public_path__ + \"static/arbre_elague-f6f2935e67769d1f0886d0c6a8238d75.png\";","module.exports = __webpack_public_path__ + \"static/arbre_coupe2-dbb9bab996df4d519850a3756ea4e479.svg\";","module.exports = __webpack_public_path__ + \"static/calcul_score-2a453f39ed59d70057b7f2b1b8fc5c07.png\";","import React from \"react\"\nimport classes from \"./styles.module.scss\"\nimport {\n  COLUMN_SIZE,\n  LARGE_CIRCLE_RADIUS,\n  MEDIUM_CIRCLE_RADIUS,\n} from \"src/components/DynamicProgram/constants.js\"\n\nexport const Grid = ({ word1, word2, subWord1, subWord2 }) => (\n  <>\n    {`_${word1}`.split(\"\").map((char, index) => (\n      <>\n        <line\n          x1={COLUMN_SIZE * (index + 1)}\n          y1={0}\n          x2={COLUMN_SIZE * (index + 1)}\n          y2={COLUMN_SIZE * (word2.length + 2)}\n          className={classes.tableLine}\n        />\n        <text\n          text-anchor=\"middle\"\n          dominant-baseline=\"middle\"\n          x={COLUMN_SIZE * (index + 1.5)}\n          y={COLUMN_SIZE * 0.5}\n          className={\n            subWord1 && index < subWord1.length\n              ? classes.subWord1\n              : classes.nomalWord\n          }\n        >\n          {char}\n        </text>\n      </>\n    ))}\n    {`_${word2}`.split(\"\").map((char, index) => (\n      <>\n        <line\n          x1={0}\n          y1={COLUMN_SIZE * (index + 1)}\n          x2={COLUMN_SIZE * (word1.length + 2)}\n          y2={COLUMN_SIZE * (index + 1)}\n          className={classes.tableLine}\n        />\n        <text\n          text-anchor=\"middle\"\n          dominant-baseline=\"middle\"\n          y={COLUMN_SIZE * (index + 1.5)}\n          x={COLUMN_SIZE * 0.5}\n          className={\n            subWord2 && index < subWord2.length\n              ? classes.subWord2\n              : classes.nomalWord\n          }\n        >\n          {char}\n        </text>\n      </>\n    ))}\n  </>\n)\n\nexport const InteractiveCircle = ({ word1, word2, onEnter }) => (\n  <>\n    {`_${word1}`.split(\"\").reduce(\n      (accu, _, index1) => [\n        ...accu,\n        ...`_${word2}`\n          .split(\"\")\n          .map((_, index2) => (\n            <circle\n              className={classes.interactiveCircle}\n              cx={COLUMN_SIZE * (index1 + 1.5)}\n              cy={COLUMN_SIZE * (index2 + 1.5)}\n              r={LARGE_CIRCLE_RADIUS}\n              onMouseEnter={onEnter(\n                `_${word1}`.slice(0, index1 + 1),\n                `_${word2}`.slice(0, index2 + 1)\n              )}\n            />\n          )),\n      ],\n      `_${word2}`\n        .split(\"\")\n        .map((_, index2) => (\n          <circle\n            className={classes.interactiveCircle}\n            cx={COLUMN_SIZE * (0 + 1.5)}\n            cy={COLUMN_SIZE * (index2 + 1.5)}\n            r={LARGE_CIRCLE_RADIUS}\n            onMouseEnter={onEnter(\n              `_${word1}`.slice(0, 0 + 1),\n              `_${word2}`.slice(0, index2 + 1)\n            )}\n          />\n        ))\n    )}\n  </>\n)\n\nexport const DisplayValues = ({ word1, word2, values }) => {\n  return (\n    <>\n      {`_${word1}`.split(\"\").reduce(\n        (accu, _, index1) => [\n          ...accu,\n          ...`_${word2}`.split(\"\").map((_, index2) => {\n            const key =\n              `_${word1}`.slice(0, index1 + 1) +\n              \"-\" +\n              `_${word2}`.slice(0, index2 + 1)\n            const v = values[key]\n            return v !== undefined ? (\n              <>\n                <circle\n                  className={classes.interactiveCircle}\n                  cx={COLUMN_SIZE * (index1 + 1.5)}\n                  cy={COLUMN_SIZE * (index2 + 1.5)}\n                  r={MEDIUM_CIRCLE_RADIUS}\n                />\n                <text\n                  text-anchor=\"middle\"\n                  dominant-baseline=\"middle\"\n                  x={COLUMN_SIZE * (index1 + 1.5)}\n                  y={COLUMN_SIZE * (index2 + 1.5)}\n                >\n                  {v}\n                </text>\n              </>\n            ) : null\n          }),\n        ],\n        `_${word2}`.split(\"\").map((_, index2) => {\n          const key = \"_-\" + `_${word2}`.slice(0, index2 + 1)\n          const v = values[key]\n          return v ? (\n            <>\n              <circle\n                className={classes.interactiveCircle}\n                cx={COLUMN_SIZE * 1.5}\n                cy={COLUMN_SIZE * (index2 + 1.5)}\n                r={MEDIUM_CIRCLE_RADIUS}\n              />\n              <text\n                text-anchor=\"middle\"\n                dominant-baseline=\"middle\"\n                x={COLUMN_SIZE * 1.5}\n                y={COLUMN_SIZE * (index2 + 1.5)}\n              >\n                {v}\n              </text>\n            </>\n          ) : null\n        })\n      )}\n    </>\n  )\n}\n","import React, { useState } from \"react\"\nimport {\n  Grid,\n  InteractiveCircle,\n} from \"src/components/DynamicProgram/atoms/Grid\"\nimport { COLUMN_SIZE } from \"src/components/DynamicProgram/constants.js\"\nimport classes from \"./styles.module.scss\"\n\nconst InteractiveGrid = ({ startWord1, startWord2 }) => {\n  const [word1, setWord1] = useState(startWord1)\n  const [word2, setWord2] = useState(startWord2)\n  const [subWord1, setSubWord1] = useState(`_${startWord1}`)\n  const [subWord2, setSubWord2] = useState(`_${startWord2}`)\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputContainer}>\n        <input\n          onChange={event => setWord1(event.target.value.toUpperCase())}\n          value={word1}\n        />\n        <input\n          onChange={event => setWord2(event.target.value.toUpperCase())}\n          value={word2}\n        />\n      </div>\n      <svg\n        viewBox={`0 0 ${COLUMN_SIZE * (word1.length + 2)} ${COLUMN_SIZE *\n          (word2.length + 2)}`}\n        style={{ width: \"100%\", maxHeight: \"20cm\" }}\n      >\n        <Grid\n          word1={word1}\n          word2={word2}\n          subWord1={subWord1}\n          subWord2={subWord2}\n        />\n        <InteractiveCircle\n          word1={word1}\n          word2={word2}\n          onEnter={(sw1, sw2) => () => {\n            setSubWord1(sw1)\n            setSubWord2(sw2)\n          }}\n        />\n        <circle\n          className={classes.activeCircle}\n          cx={COLUMN_SIZE * (subWord1.length + 0.5)}\n          cy={COLUMN_SIZE * (subWord2.length + 0.5)}\n          r={COLUMN_SIZE / 4}\n        ></circle>\n      </svg>\n      <p className={`${classes.text} ${classes.text1}`}>\n        {subWord1.slice(1) || \"_\"}\n      </p>\n      <p className={`${classes.text} ${classes.text2}`}>\n        {subWord2.slice(1) || \"_\"}\n      </p>\n    </div>\n  )\n}\n\nexport default InteractiveGrid\n","module.exports = __webpack_public_path__ + \"static/simplification_ADN-f6705b48b5ba3cc6f3b4f95af579f86e.png\";"],"sourceRoot":""}