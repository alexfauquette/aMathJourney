{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/LangSelector/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","arrayOf","LangSelector","_ref$currentLanguage","currentLanguage","_ref$languages","languages","file","_ref$location","location","_React$useState","useState","anchorEl","setAnchorEl","react_default","className","classes","root","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","menuTitle","Language_default","Menu","id","keepMounted","open","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","menu","map","language","MenuItem","key","selected","gatsby_browser_entry","link","to","Header","siteTitle","FranÃ§ais","English","header","firstLine","style","margin","components_LangSelector","float","subtitle","Layout","children","components_Header","Object","assign","article","Date","getFullYear","href","node","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,wGCTJ,IAAAP,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAS,EAAAZ,EAAA,GAAAa,EAAAb,EAAAK,EAAAO,GAAAE,EAAAd,EAAA,IAAAe,EAAAf,EAAAK,EAAAS,GAAAd,EAAAgB,EAAAd,EAAA,sBAAAa,EAAAN,IAAAT,EAAA,KAa2BiB,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,0BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,mGCY/C,SAASK,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMtB,EAASmB,EAATnB,MAC9BuB,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAA9B,EAAAC,cAAC8B,EAAA/B,EAAD,CACEgC,eAAgB,CACdT,QAEFrB,MAAOA,EACP+B,cAAa,QAAUR,EAAKI,aAAa3B,MACzCsB,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASjC,GAEX,CACEkC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASjC,GAEX,CACEgC,KAAI,sBACJC,QAASP,GAEX,CACEM,KAAM,2BACNC,QAAS,gDAEXG,OAAOd,KAKfJ,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbF,EAAIoB,UAAY,CACdlB,YAAaZ,IAAUE,OACvBW,KAAMb,IAAUE,OAChBY,KAAMd,IAAU+B,QAAQ/B,IAAUC,QAClCT,MAAOQ,IAAUE,OAAOC,YAGXO,0KCrBAsB,EA9DM,SAAArB,GAOf,IAAAsB,EAAAtB,EANJuB,uBAMI,IAAAD,EANc,UAMdA,EAAAE,EAAAxB,EALJyB,iBAKI,IAAAD,EALQ,CACV,CAAEX,KAAM,WAAYa,KAAM,MAC1B,CAAEb,KAAM,UAAWa,KAAM,KAGvBF,EAAAG,EAAA3B,EADJ4B,gBACI,IAAAD,EADO,IACPA,EAAAE,EAC4B1C,IAAM2C,SAAS,MAAxCC,EADHF,EAAA,GACaG,EADbH,EAAA,GAWJ,OACEI,EAAAtD,EAAAC,cAAA,OAAKsD,UAAWC,IAAQC,MACtBH,EAAAtD,EAAAC,cAACyD,EAAA,EAAD,CACEC,gBAAc,cACdC,gBAAc,OACdC,QAbN,SAAqBC,GACnBT,EAAYS,EAAMC,gBAadR,UAAWC,IAAQQ,WAEnBV,EAAAtD,EAAAC,cAACgE,EAAAjE,EAAD,MACAsD,EAAAtD,EAAAC,cAAA,YAAO2C,IAETU,EAAAtD,EAAAC,cAACiE,EAAA,EAAD,CACEC,GAAG,cACHf,SAAUA,EACVgB,aAAW,EACXC,KAAMC,QAAQlB,GACdmB,QApBN,WACElB,EAAY,OAoBRmB,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,QAEdpB,UAAWC,IAAQqB,MAElB/B,EAAUgC,IAAI,SAAAC,GAAQ,OACrBzB,EAAAtD,EAAAC,cAAC+E,EAAA,EAAD,CACEC,IAAKF,EAAShC,KACdmC,SAAUtC,IAAoBmC,EAAS7C,MAGvCoB,EAAAtD,EAAAC,cAACkF,EAAA,EAAD,CAAM5B,UAAWC,IAAQ4B,KAAMC,GAAOpC,EAAL,IAAiB8B,EAAShC,MACxDgC,EAAS7C,8BCvDlBoD,EAAS,SAAAjE,GAAA,IACbkE,EADalE,EACbkE,UADa5C,EAAAtB,EAEbuB,uBAFa,IAAAD,EAEK,UAFLA,EAGbM,EAHa5B,EAGb4B,SAHaJ,EAAAxB,EAIbyB,iBAJa,IAAAD,EAID,CAAE2C,WAAU,KAAMC,QAAS,IAJ1B5C,EAAA,OAMbS,EAAAtD,EAAAC,cAAA,UAAQsD,UAAWC,IAAQkC,QACzBpC,EAAAtD,EAAAC,cAAA,OAAKsD,UAAWC,IAAQmC,WACtBrC,EAAAtD,EAAAC,cAACkF,EAAA,EAAD,CAAME,GAAE,IAAMvC,EAAUF,GAAoBW,UAAWC,IAAQtD,OAC7DoD,EAAAtD,EAAAC,cAAA,MAAI2F,MAAO,CAAEC,OAAQ,IAAMN,IAE7BjC,EAAAtD,EAAAC,cAAC6F,EAAD,CACElD,gBAAiBA,EACjBK,SAAUA,EACV2C,MAAO,CAAEG,MAAO,YAGpBzC,EAAAtD,EAAAC,cAAA,MAAIsD,UAAWC,IAAQqB,MACrBvB,EAAAtD,EAAAC,cAAA,UACEqD,EAAAtD,EAAAC,cAACkF,EAAA,EAAD,CACEE,GAAE,UAAYvC,EAAUF,GACxBW,UAAWC,IAAQwC,UAFrB,UAOF1C,EAAAtD,EAAAC,cAAA,UACEqD,EAAAtD,EAAAC,cAACkF,EAAA,EAAD,CAAME,GAAE,IAAMvC,EAAUF,GAAoBW,UAAWC,IAAQtD,OAA/D,YAQRoF,EAAO9C,UAAY,CACjB+C,UAAW7E,IAAUE,QAGvB0E,EAAO/C,aAAe,CACpBgD,UAAS,IAGID,mCClCTW,EAAS,SAAA5E,GAAA,IAAG6E,EAAH7E,EAAG6E,SAAUjD,EAAb5B,EAAa4B,SAAbN,EAAAtB,EAAuBuB,uBAAvB,IAAAD,EAAyC,UAAzCA,EAAA,OACbW,EAAAtD,EAAAC,cAAA,OAAKsD,UAAWC,IAAQC,MACtBH,EAAAtD,EAAAC,cAACkG,EAADC,OAAAC,OAAA,CACEd,UAAU,0BACN,CAAE3C,kBAAiBK,cAEzBK,EAAAtD,EAAAC,cAAA,YACEqD,EAAAtD,EAAAC,cAAA,WAASsD,UAAWC,IAAQ8C,SAAUJ,IAExC5C,EAAAtD,EAAAC,cAAA,oBACK,IAAIsG,MAAOC,cADhB,mBAGElD,EAAAtD,EAAAC,cAAA,KAAGwG,KAAK,4BAAR,aAKNR,EAAOzD,UAAY,CACjB0D,SAAUxF,IAAUgG,KAAK7F,YAGZoF,wGC9BTU,EAAmB,SAAAtF,GAAkB,IAAf4B,EAAe5B,EAAf4B,SACpB2D,EAAgBC,UAAOC,4BAA4B7D,EAAS8D,UAClE,OAAKH,EAIEpG,IAAMP,cAAc+G,IAApBZ,OAAAC,OAAA,CACLpD,WACA2D,iBACGA,EAAcK,OANV,MAUXN,EAAiBnE,UAAY,CAC3BS,SAAUvC,IAAUwG,MAAM,CACxBH,SAAUrG,IAAUE,OAAOC,aAC1BA,YAGU8F","file":"component---src-pages-404-js-fd63b6a53efc8aa5c53c.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: \"google-site-verification\",\n          content: \"H5I7MCgD6ip6rafQkiIUvhaoQXlvfJoK3H4KHSg7ZZs\",\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport { Link } from \"gatsby\"\nimport LanguageIcon from \"@material-ui/icons/Language\"\nimport classes from \"./style.module.scss\"\n\nconst LangSelector = ({\n  currentLanguage = \"English\",\n  languages = [\n    { name: \"FranÃ§ais\", file: \"fr\" },\n    { name: \"English\", file: \"\" },\n  ],\n  location = \"/\",\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        className={classes.menuTitle}\n      >\n        <LanguageIcon />\n        <span>{currentLanguage}</span>\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        className={classes.menu}\n      >\n        {languages.map(language => (\n          <MenuItem\n            key={language.file}\n            selected={currentLanguage === language.name}\n          >\n            {/* <p>{`${location}/${language.file}`}</p> */}\n            <Link className={classes.link} to={`${location}/${language.file}`}>\n              {language.name}\n            </Link>\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  )\n}\n\nexport default LangSelector\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport LangSelector from \"../LangSelector\"\nimport classes from \"./style.module.scss\"\n\nconst Header = ({\n  siteTitle,\n  currentLanguage = \"English\",\n  location,\n  languages = { FranÃ§ais: \"fr\", English: \"\" },\n}) => (\n  <header className={classes.header}>\n    <div className={classes.firstLine}>\n      <Link to={`/${languages[currentLanguage]}`} className={classes.title}>\n        <h1 style={{ margin: 0 }}>{siteTitle}</h1>\n      </Link>\n      <LangSelector\n        currentLanguage={currentLanguage}\n        location={location}\n        style={{ float: \"right\" }}\n      />\n    </div>\n    <ol className={classes.menu}>\n      <li>\n        <Link\n          to={`/about/${languages[currentLanguage]}`}\n          className={classes.subtitle}\n        >\n          About\n        </Link>\n      </li>\n      <li>\n        <Link to={`/${languages[currentLanguage]}`} className={classes.title}>\n          Home\n        </Link>\n      </li>\n    </ol>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n// import { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./Header\"\nimport \"./layout.css\"\nimport classes from \"./layout.module.scss\"\n\nconst Layout = ({ children, location, currentLanguage = \"English\" }) => (\n  <div className={classes.root}>\n    <Header\n      siteTitle=\"A Mathematical Journey\"\n      {...{ currentLanguage, location }}\n    />\n    <main>\n      <article className={classes.article}>{children}</article>\n    </main>\n    <footer>\n      Â© {new Date().getFullYear()}, Built with\n      {` `}\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n    </footer>\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}